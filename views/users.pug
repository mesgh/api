extends auth.pug 

block append style
  style.
    td { padding: 5px; border: 1px solid #ac7}

block content 
  if admin 
    form.form(data-method="post" action="/users") 
      input(type="text" name="login" placeholder="Login")
      input(type="password" name="password" placeholder="Password")
      button Создать
    br
    form.form(data-method="put" action="/users") 
      select(name="login")
        each user in users 
          option(value=user.login)= user.login
      input(type="password" name="password" placeholder="Password")
      button Сменить пароль
    br
    form.form(data-method="delete" action="/users") 
      select(name="login")
        each user in users 
          option(value=user.login)= user.login
      button Удалить
    br
  h4 Список пользователей
    table
      tr 
        td Логин
        td Пароль
      each user in users 
        tr
          td= user.login
          td= user.password
      tr
        td Админ?
        td= admin

block script
  script.
    const forms = Array.from(document.querySelectorAll('.form'));
    forms.forEach(form => {
      Array.from(form.elements).forEach(el => {
        if (el.tagName === 'BUTTON') {
          el.addEventListener('click', async e => {
            e.preventDefault();
            let res;
            if (form.dataset.method === 'post' || form.dataset.method === 'put') {
              let formData = {};
              Array.from(form.elements).forEach(el => {
                if (el.tagName !== 'BUTTON') {
                  formData[el.name] = el.value;
                }
              });
              res = await fetch('/users', {
                method: form.dataset.method,
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
              }).then(async response => { return { status: response.status, body: await response.text() } });
            } else if (form.dataset.method === 'delete') {
              const login = form.elements[0].value;
              res = await fetch('/users/' + login, {
                method: form.dataset.method,
              }).then(async response => { return { status: response.status, body: await response.text() } });
            }
            await alert(res.body);
            if (res.status === 200) {
              location.reload();
            }
          });
        }
      });
    });